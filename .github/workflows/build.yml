name: Build and Upload Wheels

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*'

jobs:
  build_wheels_linux:
    name: Build Linux wheels
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel

    - name: Build wheels
      env:
        CIBW_BUILD: "cp310-manylinux_x86_64 cp311-manylinux_x86_64 cp312-manylinux_x86_64 cp313-manylinux_x86_64 cp313t-manylinux_x86_64 cp314-manylinux_x86_64 cp314t-manylinux_x86_64 pp311-manylinux_x86_64"
        CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_34"
        CIBW_ENABLE: "cpython-freethreading pypy"
        CIBW_BEFORE_BUILD: "yum install -y cmake3 libXext-devel libX11-devel mesa-libGL-devel wayland-devel wayland-protocols-devel libxkbcommon-devel mesa-libEGL-devel libXcursor-devel libXi-devel libXfixes-devel"
      run: python -m cibuildwheel --platform linux --output-dir wheelhouse

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-linux
        path: wheelhouse/*.whl

  build_wheels_windows:
    name: Build Windows wheels
    runs-on: windows-2025

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        path: DearCyGui

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install cibuildwheel

    - name: Install Windows dependencies
      run: |
        choco install cmake
        choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
        choco install windows-sdk-10.0

    - name: Create build directories
      run: |
        mkdir C:\build\wheelhouse

    - name: Build wheels
      run: python -m cibuildwheel --platform windows --output-dir C:\build\wheelhouse
      env:
        CIBW_BUILD: "cp310-win_amd64 cp311-win_amd64 cp312-win_amd64 cp313-win_amd64 cp313t-win_amd64 cp314-win_amd64 cp314t-win_amd64 pp311-win_amd64"
        CIBW_ENABLE: "cpython-freethreading pypy"
        CIBW_ENVIRONMENT: "TEMP=C:\\temp TMP=C:\\temp TMPDIR=C:\\temp"
        CIBW_BEFORE_BUILD: "IF NOT EXIST C:\\temp mkdir C:\\temp"
        CIBW_BUILD_FRONTEND: "build"
        # Explicitly use C drive for all operations
        TEMP: "C:\\temp"
        TMP: "C:\\temp"
        TMPDIR: "C:\\temp"
        RUNNER_TEMP: "C:\\temp"
        RUNNER_TOOL_CACHE: "C:\\hostedtoolcache"
      working-directory: DearCyGui

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-windows
        path: C:\build\wheelhouse\*.whl

  build_wheels_macos_x86:
    name: Build macOS wheels (x86_64)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel wheel

    - name: Install macOS dependencies
      run: |
        brew install cmake
        brew install pkg-config

    - name: Build wheels
      env:
        CIBW_BUILD: "cp310-macosx_x86_64 cp311-macosx_x86_64 cp312-macosx_x86_64 cp313-macosx_x86_64 cp313t-macosx_x86_64 cp314-macosx_x86_64 cp314t-macosx_x86_64"
        CIBW_BEFORE_BUILD: "pip install cython==3.1.1 wheel"
        CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET=10.15"
        CIBW_ENABLE: "cpython-freethreading pypy"
        MACOSX_DEPLOYMENT_TARGET: '10.15'
        CMAKE_OSX_ARCHITECTURES: x86_64
        ARCHFLAGS: "-arch x86_64"
        CFLAGS: "-arch x86_64"
        CXXFLAGS: "-arch x86_64"
        LDFLAGS: "-arch x86_64"
      run: python -m cibuildwheel --platform macos --archs x86_64 --output-dir wheelhouse
  
    - name: Fix wheel tag
      run: |
          for wheel in wheelhouse/*.whl; do
            python -m wheel tags --platform-tag=macosx_10_15_x86_64 --remove "$wheel"
          done

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-macos-x86_64
        path: wheelhouse/*.whl

  build_wheels_macos_arm:
    name: Build macOS wheels (arm64)
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel wheel
    - name: Install macOS dependencies
      run: |
        brew install cmake
        brew install pkg-config

    - name: Build wheels
      env:
        CIBW_BUILD: "cp310-macosx_arm64 cp311-macosx_arm64 cp312-macosx_arm64 cp313-macosx_arm64 cp313t-macosx_arm64 cp314-macosx_arm64 cp314t-macosx_arm64"
        CIBW_BEFORE_BUILD: "pip install cython==3.1.1 wheel"
        CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET=11.0"
        CIBW_ENABLE: "cpython-freethreading pypy"
        MACOSX_DEPLOYMENT_TARGET: '11.0'
        CMAKE_OSX_ARCHITECTURES: arm64
        ARCHFLAGS: "-arch arm64"
        CFLAGS: "-arch arm64"
        CXXFLAGS: "-arch arm64"
        LDFLAGS: "-arch arm64"

      run: python -m cibuildwheel --platform macos --archs arm64 --output-dir wheelhouse

    - name: Fix wheel tag
      run: |
          for wheel in wheelhouse/*.whl; do
            python -m wheel tags --platform-tag=macosx_11_0_arm64 --remove "$wheel"
          done

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-macos-arm64
        path: wheelhouse/*.whl

  publish:
    needs: [build_wheels_linux, build_wheels_windows, build_wheels_macos_x86, build_wheels_macos_arm]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Move wheels to dist root
      run: |
        mkdir -p dist_root
        find dist -name "*.whl" -exec mv {} dist_root/ \;

    - name: Upload combined artifacts 
      uses: actions/upload-artifact@v4
      with:
        name: all-wheels
        path: dist_root/*.whl
